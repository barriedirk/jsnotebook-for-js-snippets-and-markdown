import "./CellList.css";

import { Fragment, FC, useEffect } from "react";

import { useTypedSelector } from "../../hooks/useTypedSelector";

import CellListItem from "./CellListItem";
import AddCell from "../AddCell/AddCell";

import { useActions } from "../../hooks/useActions";

const CellList: FC = () => {
  const cells = useTypedSelector(({ cells }) => {
    const { order, data } = cells!;

    return order.map((id) => data[id]);
  });

  const { fetchCells, saveCells } = useActions();

  useEffect(() => {
    fetchCells();
  }, []);

  // @todo, it's works but is not a good solution
  // because of using a JSON.stringify is kind of ugly
  useEffect(() => {
    saveCells();
  }, [JSON.stringify(cells)]);

  const renderedCells = cells.map((cell) => (
    <Fragment key={cell.id}>
      <CellListItem cell={cell} />
      <AddCell previousCellId={cell.id} />
    </Fragment>
  ));

  return (
    <div className="cell-list">
      <AddCell forceVisible={cells.length === 0} previousCellId={null} />
      {renderedCells}
    </div>
  );
};

export default CellList;
